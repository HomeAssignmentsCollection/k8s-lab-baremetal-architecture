# Configuration Validation Schema
# Configuration validation schema

apiVersion: jsonschema.dev/v1
kind: JSONSchema
metadata:
  name: app-config-schema
spec:
  type: object
  required:
    - environment
    - kubernetes_version
    - pod_cidr
    - service_cidr
  properties:
    environment:
      type: string
      enum: ["dev", "staging", "prod"]
      description: "Environment type"
    
    kubernetes_version:
      type: string
      pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
      description: "Kubernetes version"
    
    pod_cidr:
      type: string
      pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$'
      description: "Pod CIDR range"
    
    service_cidr:
      type: string
      pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$'
      description: "Service CIDR range"
    
    admin_password:
      type: string
      minLength: 8
      pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).*$'
      description: "Admin password (must contain lowercase, uppercase, and digit)"
    
    control_plane_ips:
      type: array
      minItems: 1
      maxItems: 10
      items:
        type: string
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}$'
      description: "Control plane node IP addresses"
    
    worker_ips:
      type: array
      minItems: 1
      maxItems: 20
      items:
        type: string
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}$'
      description: "Worker node IP addresses"
    
    load_balancer_ip:
      type: string
      pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}$'
      description: "Load balancer IP address"
    
    network_gateway:
      type: string
      pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}$'
      description: "Network gateway IP address"
    
    dns_servers:
      type: array
      minItems: 1
      maxItems: 5
      items:
        type: string
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}$'
      description: "DNS server IP addresses"
    
    ssh_user:
      type: string
      minLength: 1
      maxLength: 32
      pattern: '^[a-z_][a-z0-9_-]*$'
      description: "SSH username"
    
    ssh_port:
      type: integer
      minimum: 1
      maximum: 65535
      default: 22
      description: "SSH port"
    
    container_runtime:
      type: string
      enum: ["containerd", "docker"]
      default: "containerd"
      description: "Container runtime"
    
    cni_plugin:
      type: string
      enum: ["flannel", "calico", "weave"]
      default: "flannel"
      description: "CNI plugin"
    
    enable_rbac:
      type: boolean
      default: true
      description: "Enable RBAC"
    
    enable_network_policies:
      type: boolean
      default: true
      description: "Enable network policies"
    
    enable_monitoring:
      type: boolean
      default: true
      description: "Enable monitoring"
    
    enable_logging:
      type: boolean
      default: true
      description: "Enable logging"
    
    enable_ingress:
      type: boolean
      default: true
      description: "Enable ingress controller"
    
    enable_local_storage:
      type: boolean
      default: true
      description: "Enable local storage"
    
    enable_nfs_storage:
      type: boolean
      default: false
      description: "Enable NFS storage"
    
    backup_retention_days:
      type: integer
      minimum: 1
      maximum: 365
      default: 30
      description: "Backup retention days"
    
    cluster_name:
      type: string
      minLength: 1
      maxLength: 63
      pattern: '^[a-z0-9]([a-z0-9-]*[a-z0-9])?$'
      description: "Kubernetes cluster name"
    
    cluster_domain:
      type: string
      pattern: '^[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$'
      default: "cluster.local"
      description: "Kubernetes cluster domain"
    
    project:
      type: string
      minLength: 1
      maxLength: 63
      pattern: '^[a-z0-9]([a-z0-9-]*[a-z0-9])?$'
      description: "Project name"
    
    owner:
      type: string
      minLength: 1
      maxLength: 63
      pattern: '^[a-z0-9]([a-z0-9-]*[a-z0-9])?$'
      description: "Project owner" 