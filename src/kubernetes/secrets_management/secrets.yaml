---
# Kubernetes Secrets Management

# Jenkins Admin Secret
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-admin-secret
  namespace: jenkins
  labels:
    app: jenkins
    component: secrets
type: Opaque
data:
  # admin password (base64 encoded) - change this in production!
  admin-password: YWRtaW4= # "admin" in base64
  admin-username: YWRtaW4= # "admin" in base64
---
# Grafana Admin Secret
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-secret
  namespace: monitoring
  labels:
    app: grafana
    component: secrets
type: Opaque
data:
  # admin password (base64 encoded) - change this in production!
  admin-password: YWRtaW4= # "admin" in base64
  admin-username: YWRtaW4= # "admin" in base64
---
# ArgoCD Admin Secret
apiVersion: v1
kind: Secret
metadata:
  name: argocd-admin-secret
  namespace: gitops
  labels:
    app: argocd
    component: secrets
type: Opaque
data:
  # admin password (base64 encoded) - change this in production!
  admin-password: YWRtaW4= # "admin" in base64
  admin-username: YWRtaW4= # "admin" in base64
---
# Artifactory Admin Secret
apiVersion: v1
kind: Secret
metadata:
  name: artifactory-admin-secret
  namespace: artifacts
  labels:
    app: artifactory
    component: secrets
type: Opaque
data:
  # admin password (base64 encoded) - change this in production!
  admin-password: YWRtaW4= # "admin" in base64
  admin-username: YWRtaW4= # "admin" in base64
---
# Database Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: lab-stands
  labels:
    app: database
    component: secrets
type: Opaque
data:
  # postgres password (base64 encoded) - change this in production!
  postgres-password: cG9zdGdyZXM= # "postgres" in base64
  postgres-user: cG9zdGdyZXM= # "postgres" in base64
---
# Redis Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: lab-stands
  labels:
    app: redis
    component: secrets
type: Opaque
data:
  # redis password (base64 encoded) - change this in production!
  redis-password: cmVkaXM= # "redis" in base64
---
# TLS Certificates Secret (for Ingress)
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: ingress-nginx
  labels:
    app: ingress-nginx
    component: tls
type: kubernetes.io/tls
data:
# Add your TLS certificate and key here (base64 encoded)
# tls.crt: <base64-encoded-certificate>
# tls.key: <base64-encoded-private-key>
---
# External Secrets Operator Configuration
apiVersion: v1
kind: Secret
metadata:
  name: external-secrets-config
  namespace: secrets-management
  labels:
    app: external-secrets
    component: config
type: Opaque
data:
# Configuration for external secrets (Vault, AWS Secrets Manager, etc.)
# vault-token: <base64-encoded-vault-token>
# aws-access-key: <base64-encoded-aws-access-key>
# aws-secret-key: <base64-encoded-aws-secret-key>
