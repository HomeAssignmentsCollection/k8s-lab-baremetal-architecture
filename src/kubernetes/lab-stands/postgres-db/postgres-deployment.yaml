---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db
  namespace: lab-stands
  labels:
    app: postgres-db
spec:
  serviceName: postgres-db
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          env:
            - name: POSTGRES_DB
              value: "testdb"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 1000m
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            timeoutSeconds: 3
      volumes:
        - name: postgres-config
          configMap:
            name: postgres-config
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-storage
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: lab-stands
  labels:
    app: postgres-db
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgresql
  selector:
    app: postgres-db
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: lab-stands
data:
  postgresql.conf: |
    # DB Version: 15
    # OS Type: linux
    # DB Type: web
    # Total Memory (RAM): 1 GB
    # CPUs num: 1
    # Data Storage: SSD

    max_connections = 100
    shared_buffers = 256MB
    effective_cache_size = 768MB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 2621kB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 1
    max_parallel_workers_per_gather = 1
    max_parallel_workers = 1
    max_parallel_maintenance_workers = 1

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_rotation_age = 1d
    log_rotation_size = 100MB
    log_min_duration_statement = 1000
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    log_temp_files = 0
    log_autovacuum_min_duration = 0
    log_error_verbosity = verbose
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_statement = 'all'
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: lab-stands
type: Opaque
data:
  username: cG9zdGdyZXM=
  password: cGFzc3dvcmQxMjM=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-admin
  namespace: lab-stands
  labels:
    app: postgres-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-admin
  template:
    metadata:
      labels:
        app: postgres-admin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:7.8
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "admin@example.com"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "admin123"
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-admin
  namespace: lab-stands
  labels:
    app: postgres-admin
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: postgres-admin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: postgres-admin-ingress
  namespace: lab-stands
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: pgadmin.k8s-lab.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: postgres-admin
                port:
                  number: 80
